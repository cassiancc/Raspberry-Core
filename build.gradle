plugins {
    id 'dev.architectury.loom' version '1.7-SNAPSHOT'
    id 'maven-publish'
    id 'org.moddedmc.wiki.toolkit' version '0.2.7'
}

group = project.maven_group
version = project.mod_version + "+" + minecraft_version

base {
    archivesName = project.archives_name
}

loom {
    forge {
        mixinConfig 'raspberry.mixins.json'
    }
}

wiki {
    // The name of the object (examplemod) should match the registered wiki project ID (if it exists).
    docs.create("raspberry-core") {
        // The path to the folder containing the documentation metadata file (sinytra-wiki.json)
        root = file("docs/")
    }
}

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        url = "https://maven.shedaniel.me/"
        name = "shedaniel - cloth config"
    }
    maven {
        url = "https://maven.teamabnormals.com/"
    }
    exclusiveContent {
        forRepository {
            maven {
                url "https://cursemaven.com"
            }
        }
        filter {
            includeGroup "curse.maven"
        }
    }
    maven {
        url = "https://maven.tterrag.com/"
        name = "Create"
    }
    // GeckoLib
    maven {
        name = 'GeckoLib'
        url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
    }
    // Parchment Mappings
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
    // Player Animator
    maven {
        name = "KosmX's maven"
        url = 'https://maven.kosmx.dev/'
    }
    // PalladiumCore
    maven {
        url 'https://repo.repsy.io/mvn/lucraft/threetag'
    }
    maven {
        url "https://maven.latvian.dev/releases"
        content {
            includeGroup "dev.latvian.mods"
            includeGroup "dev.latvian.apps"
        }
    }

    maven {
        url 'https://jitpack.io'
        content {
            includeGroup "com.github.rtyley"
        }
    }
    flatDir {
        dirs 'libs'
    }
    maven { url = "https://maven.bawnorton.com/releases" } // MixinSquared
    maven { url = "https://maven.enjarai.dev/mirrors" } // MixinSquared Mirror
    maven { // Curios
        name = "Illusive Soulworks maven"
        url = "https://maven.theillusivec4.top/"
    }
}

dependencies {
    minecraft "net.minecraft:minecraft:$project.minecraft_version"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.19.2:2022.11.27@zip")
    }
    forge "net.minecraftforge:forge:$project.forge_version"

    // Cloth Config
    modApi("me.shedaniel.cloth:cloth-config-forge:$cloth_config_version")

    // Abnormals
    modImplementation("maven.modrinth:environmental:$environmental_version")
    modImplementation("maven.modrinth:caverns-and-chasms:$caverns_and_chasms_version")
    modImplementation("maven.modrinth:upgrade-aquatic:$upgrade_aquatic_version")
    modImplementation("maven.modrinth:neapolitan:$neapolitan_version")
    modImplementation("com.teamabnormals:blueprint:$blueprint_version")
    modCompileOnly("maven.modrinth:endergetic:$endergetic_version")
    modImplementation("maven.modrinth:buzzier-bees:$buzzier_bees_version")

    // Recipe viewers
    modImplementation("maven.modrinth:emi:$emi_version+$minecraft_version+forge")
    modImplementation("maven.modrinth:jei:$jei_version-forge")

    // Farmer's Delight and its addons
    modImplementation("maven.modrinth:farmers-delight:$farmers_delight_version")
    modImplementation("maven.modrinth:brewin-and-chewin:$brewin_and_chewin_version")
    modImplementation("maven.modrinth:cultural-delights:$cultural_delights_version")
    modImplementation("maven.modrinth:my-nethers-delight:$nethers_delight_version")
    modImplementation("curse.maven:farmers-respite-551453:$farmers_respite_version")
//    modImplementation("maven.modrinth:respiteful:$respiteful_version") // For reasons unknown to me, this causes mapping errors
    modImplementation("curse.maven:abnormals-delight-442719:$abnormals_delight_version") // depends on farmer's delight

    // Create, its dependencies, and its dependents
    modImplementation("com.simibubi.create:create-$minecraft_version:$create_forge_version:slim") { transitive = false }
    modImplementation("com.tterrag.registrate:Registrate:$registrate_forge_version") // dependency of create
    modImplementation("com.jozufozu.flywheel:flywheel-forge-$minecraft_version:$flywheel_forge_version") // dependency of create
    modImplementation("curse.maven:create-alloyed-564792:$create_alloyed_version") // depends on create

    // Optional dependencies for mods with only mixin fixes
    modImplementation("curse.maven:aquaculture-60028:$aquaculture_version")
    modImplementation("curse.maven:copper-tuff-backport-fabric-950738:$copper_backport_version")
    modImplementation("curse.maven:copperized-567666:$copperized_version")
    modImplementation("software.bernie.geckolib:geckolib-forge-$geckolib_version")
    modImplementation("maven.modrinth:supplementaries:$supplementaries_version-forge")
    modImplementation("maven.modrinth:moonlight:$moonlight_lib_version-forge")
    modImplementation("maven.modrinth:naturalist:$naturalist_version")
    modImplementation("maven.modrinth:another-furniture:$another_furniture_version")
    modImplementation("maven.modrinth:oreganized:$oreganized_version")
    modImplementation("maven.modrinth:spelunkery:$spelunkery_version-forge")
    modImplementation("maven.modrinth:sullysmod:$sullys_version")
    modImplementation("maven.modrinth:twigs:$twigs_version")
    modImplementation("maven.modrinth:quark:$quark_version")
    modImplementation("maven.modrinth:autoreglib:$autoreglib_version") // dependency of quark
    modImplementation("maven.modrinth:dynamiccrosshair:$dynamic_crosshair_version-forge")
    modImplementation("maven.modrinth:cofh-core:$cofh_core_version-forge")
    modImplementation("curse.maven:clash-468706:$clash_version")
    modImplementation("maven.modrinth:gliders:$gliders_version")
    modRuntimeOnly("dev.kosmx.player-anim:player-animation-lib-forge:${player_anim_version}") // dependency of gliders
    modRuntimeOnly("net.threetag:PalladiumCore-forge:${palladiumcore_version}") // dependency of gliders
    modImplementation("maven.modrinth:survivality:${survivality_version}")
    modImplementation("maven.modrinth:screenshot-viewer:${screenshot_viewer_version}")
    modCompileOnly("local:ecologics-forge:1.19.2-2.1.11") // jar built locally to avoid errors when importing the project
    modImplementation("maven.modrinth:spyglass-improvements:${spyglass_improvements_version}")
    modRuntimeOnly("top.theillusivec4.curios:curios-forge:${curios_version}") // dependency of spyglass improvements
    modImplementation("maven.modrinth:toms-storage:$toms_simple_storage_version")

    // mods for testing purposes
    modImplementation("curse.maven:map-atlases-forge-519759:5138314")
    modImplementation("maven.modrinth:mmmmmmmmmmmm:1.7.2-forge")

    // EMI Compat for Enchantments
    modRuntimeOnly("dev.latvian.mods:kubejs-forge:$kubejs_version")
    modImplementation("maven.modrinth:ensorcellation:4.3.1")
    modImplementation("curse.maven:allurement-438003:4781076")
    modImplementation("maven.modrinth:mining-master:1.19.2-4.1.4")
    modImplementation("maven.modrinth:useful-spyglass:0.4.0-1.19.2")
    modImplementation("maven.modrinth:additional-enchantments:1.1.5")
    modImplementation("maven.modrinth:domestication-innovation:1.6.1")
    modImplementation("curse.maven:citadel-331936:4556677") // dependency of domestication innovation



    // beacons
    modImplementation("curse.maven:just-enough-beacons-reforged-912266:$jeb_reforged_version")
    modImplementation("curse.maven:cerbons-better-beacons-921066:$better_beacons_version")

    // MixinSquared
    compileOnly(annotationProcessor("com.github.bawnorton.mixinsquared:mixinsquared-common:0.2.0"))
    implementation(include("com.github.bawnorton.mixinsquared:mixinsquared-forge:0.2.0"))
    // MixinExtras
    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:0.4.1"))
    implementation(include("io.github.llamalad7:mixinextras-forge:0.4.1"))

}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/mods.toml') {
        expand version: project.version
    }
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

// Configure Maven publishing.
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = base.archivesName.get()
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
